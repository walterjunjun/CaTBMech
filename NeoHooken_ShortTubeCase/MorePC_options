
> the PCILU package does not work with mpiaij matrices, same as PCICC.
> Basically only PCSOR works.
>

Hardly, there are lots of parallel preconditioners tabulated in the solver
table. Since you don't seem to be clicking the links to man pages or
looking at examples, here are some concrete examples.

# Additive Schwarz with various subdomain solvers
-pc_type asm -sub_pc_type icc
-pc_type asm -sub_pc_type ilu
-pc_type asm -sub_pc_type lu
# Block Jacobi (equivalent to zero-overlap additive Schwarz)
-pc_type bjacobi -sub_pc_type icc
# Redundant direct solve (useful for coarse levels or for debugging)
-pc_type redundant -redundant_pc_type lu
# Parallel direct solve (with various packages)
-pc_type lu -pc_factor_mat_solver_package mumps
-pc_type lu -pc_factor_mat_solver_package superlu_dist
-pc_type lu -pc_factor_mat_solver_package pastix
# Parallel smoothed aggregation algebraic multigrid
-pc_type gamg # requires petsc-dev
-pc_type ml # --download-ml
# Classical algebraic multigrid (from Hypre)
-pc_type hypre -pc_hypre_type boomeramg
# Parallel ILU
-pc_type hypre -pc_hypre_type pilut # deprecated, but includes drop
tolerance
-pc_type hypre -pc_hypre_type euclid # supported, no drop tolerance
# Sparse approximate inverse
-pc_type spai
-pc_type hypre -pc_hypre_type parasails
# Field split with AMG inside (physics-blocked relaxation (Schwarz) or
factorization (Schur))
-pc_type fieldsplit -fieldsplit_0_pc_type gamg -fieldsplit_1_pc_type
pbjacobi
# Factorization field split with automatic saddle point detection,
precondition Schur complement with least squares commutator
-pc_type fieldsplit -pc_fieldsplit_detect_saddle_point -pc_fieldsplit_type
schur -fieldsplit_0_pc_type gamg -fieldsplit_1_pc_type ls
-fieldsplit_1_lsc_pc_type gamg
